//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/_Scripts/Runtime/Player/Input/InputAsset/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

namespace GameCells.Player.Input
{
    public partial class @PlayerControls : IInputActionCollection2, IDisposable
    {
        public InputActionAsset asset { get; }
        public @PlayerControls()
        {
            asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""Gameplay"",
            ""id"": ""f0f4d5df-3c24-4f8a-8f32-022bd17f54d5"",
            ""actions"": [
                {
                    ""name"": ""Attack"",
                    ""type"": ""Button"",
                    ""id"": ""05fc7e70-cd52-4a50-a13c-55c9f7643e9c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Dodge"",
                    ""type"": ""Button"",
                    ""id"": ""f3c93781-0f9a-4614-953f-b41fa56b4e96"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""6c36afce-b41b-467a-918f-067322e393b3"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Touch"",
                    ""type"": ""Button"",
                    ""id"": ""b2a7dae7-b38d-4e83-b1fa-2b69fd8d1232"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""4e62deb3-f0bb-4a55-be96-348f0c81151e"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""04ee8a53-f62b-4b31-83c6-1049c9cec0aa"",
                    ""path"": ""<Touchscreen>/Press"",
                    ""interactions"": ""Tap"",
                    ""processors"": """",
                    ""groups"": ""Mobile"",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""651b6994-af23-422d-b35b-9250783bf05c"",
                    ""path"": ""<Touchscreen>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mobile"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""d6adc504-b09e-4e77-aa7e-564fcef01d79"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""49fdd84a-e8c8-461f-ac95-d9c80b47c3c2"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""2fc2701a-e645-46dd-8e52-edefcc481935"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""56773109-82fe-4919-8d29-18440215b7ea"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""50297a37-b91b-411b-9eca-d68b75a398f6"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""863d3f3d-3b4b-4331-b02d-9ae9f583f94f"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Dodge"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""810dfefe-889e-41d7-b8c1-4cbbef647820"",
                    ""path"": ""<Touchscreen>/Press"",
                    ""interactions"": ""Tap"",
                    ""processors"": """",
                    ""groups"": ""Mobile"",
                    ""action"": ""Dodge"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0734548c-494a-42ed-bf25-73a280c33a87"",
                    ""path"": ""<Touchscreen>/Press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mobile"",
                    ""action"": ""Touch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Gameplay1"",
            ""id"": ""51c54ed6-4cf9-45f9-bb36-2fb6bdd6bd85"",
            ""actions"": [
                {
                    ""name"": ""Attack"",
                    ""type"": ""Button"",
                    ""id"": ""e1f0b5e0-e7a1-414c-bf25-b808fa494492"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Dodge"",
                    ""type"": ""Button"",
                    ""id"": ""a5a847cd-251b-475a-8c19-ea013a6dae16"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Move"",
                    ""type"": ""PassThrough"",
                    ""id"": ""c1173a5c-3f0e-4a5f-bbea-410db620638a"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""TouchStart"",
                    ""type"": ""PassThrough"",
                    ""id"": ""37040b52-05f5-4680-b375-f2d1804b01da"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TouchEnd"",
                    ""type"": ""PassThrough"",
                    ""id"": ""79728b5e-0d66-4a55-a716-dd6548d158cd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=1)"",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""44959c97-67d0-45ad-8371-87125c52c048"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c0bd5bf8-2c4a-4df0-92d4-f38a56a7fd80"",
                    ""path"": ""<Touchscreen>/Press"",
                    ""interactions"": ""Tap"",
                    ""processors"": """",
                    ""groups"": ""Mobile"",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""487cca20-ea28-4063-a406-751104d55157"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e0fda1b3-d9b6-432a-ad95-3637181c7c6d"",
                    ""path"": ""<Touchscreen>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mobile"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4a2bc708-e34e-479b-87de-054fc9092c96"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""TouchStart"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""967c0ac8-f305-4b9a-a8ba-c02473a358bf"",
                    ""path"": ""<Touchscreen>/Press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mobile"",
                    ""action"": ""TouchStart"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0ff6fa0a-eaff-457f-811a-ab584e737374"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": ""Press(behavior=1)"",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""TouchEnd"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9afc653c-b6e4-4386-a444-ee22ff99d1fa"",
                    ""path"": ""<Touchscreen>/Press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mobile"",
                    ""action"": ""TouchEnd"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0bfa0e44-fade-4219-beec-409767c93dcf"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Dodge"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""42618933-4163-4dc0-a88c-333d5a79898e"",
                    ""path"": ""<Touchscreen>/Press"",
                    ""interactions"": ""Tap"",
                    ""processors"": """",
                    ""groups"": ""Mobile"",
                    ""action"": ""Dodge"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Gameplay3"",
            ""id"": ""5e620b42-8163-4e08-a31c-14208665ad53"",
            ""actions"": [
                {
                    ""name"": ""Attack"",
                    ""type"": ""Button"",
                    ""id"": ""00d68ccf-1983-4e5c-84fa-ccbbddd8491d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Dodge"",
                    ""type"": ""Button"",
                    ""id"": ""81a42468-b5bb-4629-8f32-7e50065c75f8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Move"",
                    ""type"": ""PassThrough"",
                    ""id"": ""f784015e-1411-4812-a810-248d0b796610"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""TouchStart"",
                    ""type"": ""PassThrough"",
                    ""id"": ""baad19da-428a-4efb-8af5-bbf456872841"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TouchEnd"",
                    ""type"": ""PassThrough"",
                    ""id"": ""54668553-25b6-4c74-8f03-9245ad9433bb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=1)"",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""52b29431-8887-448f-8510-39eb2165ddcf"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b77ac85b-f4dd-49d8-9802-6c6e44b09fa3"",
                    ""path"": ""<Touchscreen>/Press"",
                    ""interactions"": ""Tap"",
                    ""processors"": """",
                    ""groups"": ""Mobile"",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6e737e95-b335-44e9-aa7e-c32eb79bff17"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d7986327-f99d-4dc0-93d1-b305df5178c6"",
                    ""path"": ""<Touchscreen>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mobile"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""73ce00d5-f3e7-465c-938d-11c096643913"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""TouchStart"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c3490691-46c4-418d-8e81-5a48e67d052e"",
                    ""path"": ""<Touchscreen>/Press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mobile"",
                    ""action"": ""TouchStart"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ca905c2f-17b0-4b29-aa97-c159f7edb055"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": ""Press(behavior=1)"",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""TouchEnd"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""edfb7c23-ccde-492b-b72c-ff7a96f79ee0"",
                    ""path"": ""<Touchscreen>/Press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mobile"",
                    ""action"": ""TouchEnd"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a33e7c70-b2b0-43c7-8efa-0ab51eecfb54"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Dodge"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dc06113e-7db9-4dec-bd22-b2494f80c4b5"",
                    ""path"": ""<Touchscreen>/Press"",
                    ""interactions"": ""Tap"",
                    ""processors"": """",
                    ""groups"": ""Mobile"",
                    ""action"": ""Dodge"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Gameplay2"",
            ""id"": ""43cca490-51e9-42a2-a295-daf93ce91aba"",
            ""actions"": [
                {
                    ""name"": ""Tap"",
                    ""type"": ""Button"",
                    ""id"": ""bfd13cee-e264-4cc3-8426-6801ca4b67b3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TouchPosition"",
                    ""type"": ""Value"",
                    ""id"": ""dd0efddd-2708-4251-8a4f-be6fb000a0ec"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""StartDrag"",
                    ""type"": ""PassThrough"",
                    ""id"": ""c238908c-8b29-44ac-a15d-e59016c43f00"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""EndDrag"",
                    ""type"": ""PassThrough"",
                    ""id"": ""7edb8341-e5d4-45cb-8650-97fe699eed9a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=1)"",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""ee633c39-6f33-4f10-96fd-509a9d512ff0"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Tap"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9e4b44c9-dcec-45a7-b6d8-daa9f8aceba1"",
                    ""path"": ""<Touchscreen>/Press"",
                    ""interactions"": ""Tap"",
                    ""processors"": """",
                    ""groups"": ""Mobile"",
                    ""action"": ""Tap"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4400c8b8-c45a-41ec-ba5f-64c9899c446b"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""TouchPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0b4c6b8a-dddb-4f5a-a95d-f2882292c217"",
                    ""path"": ""<Touchscreen>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mobile"",
                    ""action"": ""TouchPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b0bba45a-cad3-4a5b-86ea-ad30e3b7cecf"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""StartDrag"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""374fbbad-8d4f-4d6b-8f1d-eda1ae6dff13"",
                    ""path"": ""<Touchscreen>/Press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mobile"",
                    ""action"": ""StartDrag"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""79318b63-c729-4a67-be5d-53feda457a5c"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": ""Press(behavior=1)"",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""EndDrag"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""90c0efaf-29bf-450c-930a-4d75cb0851c4"",
                    ""path"": ""<Touchscreen>/Press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mobile"",
                    ""action"": ""EndDrag"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard"",
            ""bindingGroup"": ""Keyboard"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Mobile"",
            ""bindingGroup"": ""Mobile"",
            ""devices"": [
                {
                    ""devicePath"": ""<Touchscreen>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
            // Gameplay
            m_Gameplay = asset.FindActionMap("Gameplay", throwIfNotFound: true);
            m_Gameplay_Attack = m_Gameplay.FindAction("Attack", throwIfNotFound: true);
            m_Gameplay_Dodge = m_Gameplay.FindAction("Dodge", throwIfNotFound: true);
            m_Gameplay_Move = m_Gameplay.FindAction("Move", throwIfNotFound: true);
            m_Gameplay_Touch = m_Gameplay.FindAction("Touch", throwIfNotFound: true);
            // Gameplay1
            m_Gameplay1 = asset.FindActionMap("Gameplay1", throwIfNotFound: true);
            m_Gameplay1_Attack = m_Gameplay1.FindAction("Attack", throwIfNotFound: true);
            m_Gameplay1_Dodge = m_Gameplay1.FindAction("Dodge", throwIfNotFound: true);
            m_Gameplay1_Move = m_Gameplay1.FindAction("Move", throwIfNotFound: true);
            m_Gameplay1_TouchStart = m_Gameplay1.FindAction("TouchStart", throwIfNotFound: true);
            m_Gameplay1_TouchEnd = m_Gameplay1.FindAction("TouchEnd", throwIfNotFound: true);
            // Gameplay3
            m_Gameplay3 = asset.FindActionMap("Gameplay3", throwIfNotFound: true);
            m_Gameplay3_Attack = m_Gameplay3.FindAction("Attack", throwIfNotFound: true);
            m_Gameplay3_Dodge = m_Gameplay3.FindAction("Dodge", throwIfNotFound: true);
            m_Gameplay3_Move = m_Gameplay3.FindAction("Move", throwIfNotFound: true);
            m_Gameplay3_TouchStart = m_Gameplay3.FindAction("TouchStart", throwIfNotFound: true);
            m_Gameplay3_TouchEnd = m_Gameplay3.FindAction("TouchEnd", throwIfNotFound: true);
            // Gameplay2
            m_Gameplay2 = asset.FindActionMap("Gameplay2", throwIfNotFound: true);
            m_Gameplay2_Tap = m_Gameplay2.FindAction("Tap", throwIfNotFound: true);
            m_Gameplay2_TouchPosition = m_Gameplay2.FindAction("TouchPosition", throwIfNotFound: true);
            m_Gameplay2_StartDrag = m_Gameplay2.FindAction("StartDrag", throwIfNotFound: true);
            m_Gameplay2_EndDrag = m_Gameplay2.FindAction("EndDrag", throwIfNotFound: true);
        }

        public void Dispose()
        {
            UnityEngine.Object.Destroy(asset);
        }

        public InputBinding? bindingMask
        {
            get => asset.bindingMask;
            set => asset.bindingMask = value;
        }

        public ReadOnlyArray<InputDevice>? devices
        {
            get => asset.devices;
            set => asset.devices = value;
        }

        public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

        public bool Contains(InputAction action)
        {
            return asset.Contains(action);
        }

        public IEnumerator<InputAction> GetEnumerator()
        {
            return asset.GetEnumerator();
        }

        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }

        public void Enable()
        {
            asset.Enable();
        }

        public void Disable()
        {
            asset.Disable();
        }
        public IEnumerable<InputBinding> bindings => asset.bindings;

        public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
        {
            return asset.FindAction(actionNameOrId, throwIfNotFound);
        }
        public int FindBinding(InputBinding bindingMask, out InputAction action)
        {
            return asset.FindBinding(bindingMask, out action);
        }

        // Gameplay
        private readonly InputActionMap m_Gameplay;
        private IGameplayActions m_GameplayActionsCallbackInterface;
        private readonly InputAction m_Gameplay_Attack;
        private readonly InputAction m_Gameplay_Dodge;
        private readonly InputAction m_Gameplay_Move;
        private readonly InputAction m_Gameplay_Touch;
        public struct GameplayActions
        {
            private @PlayerControls m_Wrapper;
            public GameplayActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
            public InputAction @Attack => m_Wrapper.m_Gameplay_Attack;
            public InputAction @Dodge => m_Wrapper.m_Gameplay_Dodge;
            public InputAction @Move => m_Wrapper.m_Gameplay_Move;
            public InputAction @Touch => m_Wrapper.m_Gameplay_Touch;
            public InputActionMap Get() { return m_Wrapper.m_Gameplay; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(GameplayActions set) { return set.Get(); }
            public void SetCallbacks(IGameplayActions instance)
            {
                if (m_Wrapper.m_GameplayActionsCallbackInterface != null)
                {
                    @Attack.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnAttack;
                    @Attack.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnAttack;
                    @Attack.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnAttack;
                    @Dodge.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnDodge;
                    @Dodge.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnDodge;
                    @Dodge.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnDodge;
                    @Move.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnMove;
                    @Move.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnMove;
                    @Move.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnMove;
                    @Touch.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnTouch;
                    @Touch.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnTouch;
                    @Touch.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnTouch;
                }
                m_Wrapper.m_GameplayActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @Attack.started += instance.OnAttack;
                    @Attack.performed += instance.OnAttack;
                    @Attack.canceled += instance.OnAttack;
                    @Dodge.started += instance.OnDodge;
                    @Dodge.performed += instance.OnDodge;
                    @Dodge.canceled += instance.OnDodge;
                    @Move.started += instance.OnMove;
                    @Move.performed += instance.OnMove;
                    @Move.canceled += instance.OnMove;
                    @Touch.started += instance.OnTouch;
                    @Touch.performed += instance.OnTouch;
                    @Touch.canceled += instance.OnTouch;
                }
            }
        }
        public GameplayActions @Gameplay => new GameplayActions(this);

        // Gameplay1
        private readonly InputActionMap m_Gameplay1;
        private IGameplay1Actions m_Gameplay1ActionsCallbackInterface;
        private readonly InputAction m_Gameplay1_Attack;
        private readonly InputAction m_Gameplay1_Dodge;
        private readonly InputAction m_Gameplay1_Move;
        private readonly InputAction m_Gameplay1_TouchStart;
        private readonly InputAction m_Gameplay1_TouchEnd;
        public struct Gameplay1Actions
        {
            private @PlayerControls m_Wrapper;
            public Gameplay1Actions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
            public InputAction @Attack => m_Wrapper.m_Gameplay1_Attack;
            public InputAction @Dodge => m_Wrapper.m_Gameplay1_Dodge;
            public InputAction @Move => m_Wrapper.m_Gameplay1_Move;
            public InputAction @TouchStart => m_Wrapper.m_Gameplay1_TouchStart;
            public InputAction @TouchEnd => m_Wrapper.m_Gameplay1_TouchEnd;
            public InputActionMap Get() { return m_Wrapper.m_Gameplay1; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(Gameplay1Actions set) { return set.Get(); }
            public void SetCallbacks(IGameplay1Actions instance)
            {
                if (m_Wrapper.m_Gameplay1ActionsCallbackInterface != null)
                {
                    @Attack.started -= m_Wrapper.m_Gameplay1ActionsCallbackInterface.OnAttack;
                    @Attack.performed -= m_Wrapper.m_Gameplay1ActionsCallbackInterface.OnAttack;
                    @Attack.canceled -= m_Wrapper.m_Gameplay1ActionsCallbackInterface.OnAttack;
                    @Dodge.started -= m_Wrapper.m_Gameplay1ActionsCallbackInterface.OnDodge;
                    @Dodge.performed -= m_Wrapper.m_Gameplay1ActionsCallbackInterface.OnDodge;
                    @Dodge.canceled -= m_Wrapper.m_Gameplay1ActionsCallbackInterface.OnDodge;
                    @Move.started -= m_Wrapper.m_Gameplay1ActionsCallbackInterface.OnMove;
                    @Move.performed -= m_Wrapper.m_Gameplay1ActionsCallbackInterface.OnMove;
                    @Move.canceled -= m_Wrapper.m_Gameplay1ActionsCallbackInterface.OnMove;
                    @TouchStart.started -= m_Wrapper.m_Gameplay1ActionsCallbackInterface.OnTouchStart;
                    @TouchStart.performed -= m_Wrapper.m_Gameplay1ActionsCallbackInterface.OnTouchStart;
                    @TouchStart.canceled -= m_Wrapper.m_Gameplay1ActionsCallbackInterface.OnTouchStart;
                    @TouchEnd.started -= m_Wrapper.m_Gameplay1ActionsCallbackInterface.OnTouchEnd;
                    @TouchEnd.performed -= m_Wrapper.m_Gameplay1ActionsCallbackInterface.OnTouchEnd;
                    @TouchEnd.canceled -= m_Wrapper.m_Gameplay1ActionsCallbackInterface.OnTouchEnd;
                }
                m_Wrapper.m_Gameplay1ActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @Attack.started += instance.OnAttack;
                    @Attack.performed += instance.OnAttack;
                    @Attack.canceled += instance.OnAttack;
                    @Dodge.started += instance.OnDodge;
                    @Dodge.performed += instance.OnDodge;
                    @Dodge.canceled += instance.OnDodge;
                    @Move.started += instance.OnMove;
                    @Move.performed += instance.OnMove;
                    @Move.canceled += instance.OnMove;
                    @TouchStart.started += instance.OnTouchStart;
                    @TouchStart.performed += instance.OnTouchStart;
                    @TouchStart.canceled += instance.OnTouchStart;
                    @TouchEnd.started += instance.OnTouchEnd;
                    @TouchEnd.performed += instance.OnTouchEnd;
                    @TouchEnd.canceled += instance.OnTouchEnd;
                }
            }
        }
        public Gameplay1Actions @Gameplay1 => new Gameplay1Actions(this);

        // Gameplay3
        private readonly InputActionMap m_Gameplay3;
        private IGameplay3Actions m_Gameplay3ActionsCallbackInterface;
        private readonly InputAction m_Gameplay3_Attack;
        private readonly InputAction m_Gameplay3_Dodge;
        private readonly InputAction m_Gameplay3_Move;
        private readonly InputAction m_Gameplay3_TouchStart;
        private readonly InputAction m_Gameplay3_TouchEnd;
        public struct Gameplay3Actions
        {
            private @PlayerControls m_Wrapper;
            public Gameplay3Actions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
            public InputAction @Attack => m_Wrapper.m_Gameplay3_Attack;
            public InputAction @Dodge => m_Wrapper.m_Gameplay3_Dodge;
            public InputAction @Move => m_Wrapper.m_Gameplay3_Move;
            public InputAction @TouchStart => m_Wrapper.m_Gameplay3_TouchStart;
            public InputAction @TouchEnd => m_Wrapper.m_Gameplay3_TouchEnd;
            public InputActionMap Get() { return m_Wrapper.m_Gameplay3; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(Gameplay3Actions set) { return set.Get(); }
            public void SetCallbacks(IGameplay3Actions instance)
            {
                if (m_Wrapper.m_Gameplay3ActionsCallbackInterface != null)
                {
                    @Attack.started -= m_Wrapper.m_Gameplay3ActionsCallbackInterface.OnAttack;
                    @Attack.performed -= m_Wrapper.m_Gameplay3ActionsCallbackInterface.OnAttack;
                    @Attack.canceled -= m_Wrapper.m_Gameplay3ActionsCallbackInterface.OnAttack;
                    @Dodge.started -= m_Wrapper.m_Gameplay3ActionsCallbackInterface.OnDodge;
                    @Dodge.performed -= m_Wrapper.m_Gameplay3ActionsCallbackInterface.OnDodge;
                    @Dodge.canceled -= m_Wrapper.m_Gameplay3ActionsCallbackInterface.OnDodge;
                    @Move.started -= m_Wrapper.m_Gameplay3ActionsCallbackInterface.OnMove;
                    @Move.performed -= m_Wrapper.m_Gameplay3ActionsCallbackInterface.OnMove;
                    @Move.canceled -= m_Wrapper.m_Gameplay3ActionsCallbackInterface.OnMove;
                    @TouchStart.started -= m_Wrapper.m_Gameplay3ActionsCallbackInterface.OnTouchStart;
                    @TouchStart.performed -= m_Wrapper.m_Gameplay3ActionsCallbackInterface.OnTouchStart;
                    @TouchStart.canceled -= m_Wrapper.m_Gameplay3ActionsCallbackInterface.OnTouchStart;
                    @TouchEnd.started -= m_Wrapper.m_Gameplay3ActionsCallbackInterface.OnTouchEnd;
                    @TouchEnd.performed -= m_Wrapper.m_Gameplay3ActionsCallbackInterface.OnTouchEnd;
                    @TouchEnd.canceled -= m_Wrapper.m_Gameplay3ActionsCallbackInterface.OnTouchEnd;
                }
                m_Wrapper.m_Gameplay3ActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @Attack.started += instance.OnAttack;
                    @Attack.performed += instance.OnAttack;
                    @Attack.canceled += instance.OnAttack;
                    @Dodge.started += instance.OnDodge;
                    @Dodge.performed += instance.OnDodge;
                    @Dodge.canceled += instance.OnDodge;
                    @Move.started += instance.OnMove;
                    @Move.performed += instance.OnMove;
                    @Move.canceled += instance.OnMove;
                    @TouchStart.started += instance.OnTouchStart;
                    @TouchStart.performed += instance.OnTouchStart;
                    @TouchStart.canceled += instance.OnTouchStart;
                    @TouchEnd.started += instance.OnTouchEnd;
                    @TouchEnd.performed += instance.OnTouchEnd;
                    @TouchEnd.canceled += instance.OnTouchEnd;
                }
            }
        }
        public Gameplay3Actions @Gameplay3 => new Gameplay3Actions(this);

        // Gameplay2
        private readonly InputActionMap m_Gameplay2;
        private IGameplay2Actions m_Gameplay2ActionsCallbackInterface;
        private readonly InputAction m_Gameplay2_Tap;
        private readonly InputAction m_Gameplay2_TouchPosition;
        private readonly InputAction m_Gameplay2_StartDrag;
        private readonly InputAction m_Gameplay2_EndDrag;
        public struct Gameplay2Actions
        {
            private @PlayerControls m_Wrapper;
            public Gameplay2Actions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
            public InputAction @Tap => m_Wrapper.m_Gameplay2_Tap;
            public InputAction @TouchPosition => m_Wrapper.m_Gameplay2_TouchPosition;
            public InputAction @StartDrag => m_Wrapper.m_Gameplay2_StartDrag;
            public InputAction @EndDrag => m_Wrapper.m_Gameplay2_EndDrag;
            public InputActionMap Get() { return m_Wrapper.m_Gameplay2; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(Gameplay2Actions set) { return set.Get(); }
            public void SetCallbacks(IGameplay2Actions instance)
            {
                if (m_Wrapper.m_Gameplay2ActionsCallbackInterface != null)
                {
                    @Tap.started -= m_Wrapper.m_Gameplay2ActionsCallbackInterface.OnTap;
                    @Tap.performed -= m_Wrapper.m_Gameplay2ActionsCallbackInterface.OnTap;
                    @Tap.canceled -= m_Wrapper.m_Gameplay2ActionsCallbackInterface.OnTap;
                    @TouchPosition.started -= m_Wrapper.m_Gameplay2ActionsCallbackInterface.OnTouchPosition;
                    @TouchPosition.performed -= m_Wrapper.m_Gameplay2ActionsCallbackInterface.OnTouchPosition;
                    @TouchPosition.canceled -= m_Wrapper.m_Gameplay2ActionsCallbackInterface.OnTouchPosition;
                    @StartDrag.started -= m_Wrapper.m_Gameplay2ActionsCallbackInterface.OnStartDrag;
                    @StartDrag.performed -= m_Wrapper.m_Gameplay2ActionsCallbackInterface.OnStartDrag;
                    @StartDrag.canceled -= m_Wrapper.m_Gameplay2ActionsCallbackInterface.OnStartDrag;
                    @EndDrag.started -= m_Wrapper.m_Gameplay2ActionsCallbackInterface.OnEndDrag;
                    @EndDrag.performed -= m_Wrapper.m_Gameplay2ActionsCallbackInterface.OnEndDrag;
                    @EndDrag.canceled -= m_Wrapper.m_Gameplay2ActionsCallbackInterface.OnEndDrag;
                }
                m_Wrapper.m_Gameplay2ActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @Tap.started += instance.OnTap;
                    @Tap.performed += instance.OnTap;
                    @Tap.canceled += instance.OnTap;
                    @TouchPosition.started += instance.OnTouchPosition;
                    @TouchPosition.performed += instance.OnTouchPosition;
                    @TouchPosition.canceled += instance.OnTouchPosition;
                    @StartDrag.started += instance.OnStartDrag;
                    @StartDrag.performed += instance.OnStartDrag;
                    @StartDrag.canceled += instance.OnStartDrag;
                    @EndDrag.started += instance.OnEndDrag;
                    @EndDrag.performed += instance.OnEndDrag;
                    @EndDrag.canceled += instance.OnEndDrag;
                }
            }
        }
        public Gameplay2Actions @Gameplay2 => new Gameplay2Actions(this);
        private int m_KeyboardSchemeIndex = -1;
        public InputControlScheme KeyboardScheme
        {
            get
            {
                if (m_KeyboardSchemeIndex == -1) m_KeyboardSchemeIndex = asset.FindControlSchemeIndex("Keyboard");
                return asset.controlSchemes[m_KeyboardSchemeIndex];
            }
        }
        private int m_MobileSchemeIndex = -1;
        public InputControlScheme MobileScheme
        {
            get
            {
                if (m_MobileSchemeIndex == -1) m_MobileSchemeIndex = asset.FindControlSchemeIndex("Mobile");
                return asset.controlSchemes[m_MobileSchemeIndex];
            }
        }
        public interface IGameplayActions
        {
            void OnAttack(InputAction.CallbackContext context);
            void OnDodge(InputAction.CallbackContext context);
            void OnMove(InputAction.CallbackContext context);
            void OnTouch(InputAction.CallbackContext context);
        }
        public interface IGameplay1Actions
        {
            void OnAttack(InputAction.CallbackContext context);
            void OnDodge(InputAction.CallbackContext context);
            void OnMove(InputAction.CallbackContext context);
            void OnTouchStart(InputAction.CallbackContext context);
            void OnTouchEnd(InputAction.CallbackContext context);
        }
        public interface IGameplay3Actions
        {
            void OnAttack(InputAction.CallbackContext context);
            void OnDodge(InputAction.CallbackContext context);
            void OnMove(InputAction.CallbackContext context);
            void OnTouchStart(InputAction.CallbackContext context);
            void OnTouchEnd(InputAction.CallbackContext context);
        }
        public interface IGameplay2Actions
        {
            void OnTap(InputAction.CallbackContext context);
            void OnTouchPosition(InputAction.CallbackContext context);
            void OnStartDrag(InputAction.CallbackContext context);
            void OnEndDrag(InputAction.CallbackContext context);
        }
    }
}
